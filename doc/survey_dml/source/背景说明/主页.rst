.. .............................................................................
..
.. Filename       : 主页.rst
.. Author         : Huang Leilei
.. Created        : 2020-05-23
.. Description    : 主页
..
.. .............................................................................

========
背景说明
========

--------
算法简介
--------

*   DML（Deterministic Maximum Likelihood，确定性最大似然）算法在雷达系统中的应用
    是为了弥补传统DBF（Digital BeamForm，数字波束成形）算法在角分辨上的不足。

--------
核心原理
--------

*   截取自《基于最大似然算法的DOA估计方法研究》（作者：李晓刚）

    .. image:: 核心原理_1.png

----------
另一种理解
----------

*   通过观察能量（代价）函数 :math:`abs(tr(P_{A(\theta)}\hat{R}))`，
    其中，:math:`P_{A(\theta)} = A(\theta) ( A^H(\theta) A(\theta) )^{-1} A^H(\theta)`；
    :math:`\hat{R} = \frac{1}{M} \sum_{n=1}^{M} (X(i) X^H(i)))`，

    我们能够很容易地联想到输入向量 :math:`X` 在矩阵 :math:`P` 上的投影，
    而矩阵 :math:`P = A ( A^H A )^{-1} A^H` 恰恰是基于待测矢量 :math:`A` 所构建的正交投影矩阵。

    \

*   由此，我们不妨构建另一种能量（代价）函数 :math:`norm(P_{A(\theta)} X(i))`，其意义是：

    **基于待测矢量构建正交投影矩阵，并将输入向量通过该矩阵进行投影，再对投影所得的向量进行取模，
    显然，取到的模值越大，该待测矢量所对应的角度就越有可能是真实的入射角。**

    \

*   而事实上，当 :math:`M = 1` 时，这两种函数可被证明是等效的，过程如下：

    .. math::
        abs(tr(P\hat{R}))
        = abs(tr(P X X^H))
        = abs(tr(X^H P X))
        = abs(X^H P X)

    由于矩阵 :math:`P` 是正交投影矩阵，所以，:math:`P = P^2`， :math:`P = P^H`，因此，

    .. math::
        abs(tr(P\hat{R}))
        = ...
        = abs(X^H P X)
        = abs(X^H P^2 X)
        = abs(X^H P P X)
        = abs(X^H P^H P X)
        = abs((P X)^H P X)

    由于矩阵 :math:`P X` 实际是一个向量，所以，

    .. math::
        abs(tr(P\hat{R}))
        = ...
        = abs((P X)^H P X)
        = (P X)^H P X

    同样，因为矩阵 :math:`P X` 是一个向量，所以，

    .. math::
        abs(tr(P\hat{R}))
        = ...
        = (P X)^H P X
        = norm(P X)^2

    当 :math:`M != 1` 时，可将 :math:`\hat{R}` 分解成 :math:`\hat{X}(i) \hat{X}^H(i)` 并重新论证其等效性
